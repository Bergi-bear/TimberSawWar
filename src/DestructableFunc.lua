---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Bergi.
--- DateTime: 21.01.2020 1:15
---
-----
DestructableState={}
function InitDestructablesActions()
	AnyDeathDestructEnum = CreateTrigger()
	--AnyDeathDestruct = CreateTrigger()
	EnumDestructablesInRect(bj_mapInitialPlayableArea,nil, function()
		TriggerRegisterDeathEvent(AnyDeathDestructEnum, GetEnumDestructable())
	end)
	TriggerAddAction(AnyDeathDestructEnum, function()
		local d=GetTriggerDestructable()
		--print("умер"..GetDestructableName(d))
		local SpawnTime=GetRandomInt(30,60)
		if DestructableState[GetHandleId(d)]==nil then
			--print("убит с руки")
			local data={}
			local KillerID=99
			for i = 0, 3 do
				local id=GetPlayerId(Player(i))
				data[i+1]=R2I(DistanceBetweenXY(GetDestructableX(d),GetDestructableY(d),GetUnitX(HEROSimple[id+1]),GetUnitY(HEROSimple[id+1])))
			end
			local min=math.min (data[1],data[2],data[3],data[4])
			for i = 1, 4 do if data[i]==min then KillerID=i-1	end	end
			AddLumber(1,HEROSimple[KillerID+1])
		end
		DestructableState[GetHandleId(d)]=nil
		TimerStart(CreateTimer(), SpawnTime, false, function()
			DestructableRestoreLife(d, GetDestructableMaxLife(d), true)
			PauseTimer(GetExpiredTimer())
			DestroyTimer(GetExpiredTimer())
		end)
	end)
end

GlobalRect=Rect(0,0,0,0)
function KillTreeInRange (x,y,range)
	local k=0
	SetRect(GlobalRect, x - range, y - range, x + range, y +range)
	EnumDestructablesInRect(GlobalRect,nil,function ()
		local d=GetEnumDestructable()
		if GetDestructableLife(d)>0 and (GetDestructableTypeId(d)==(FourCC('ATtc')) or GetDestructableTypeId(d)==(FourCC('ATtr')) or GetDestructableTypeId(d)==(FourCC('B001'))) then --
			k=k+1
			DestructableState[GetHandleId(d)]=1-- параметр означает, что дерево уничтожено способностью
			--print("найдено дерево")
			KillDestructable(d)
		end
	end)
	return k
end
function AddLumber (ttk,caster)
	local ownplayer=GetOwningPlayer(caster)
	if ttk>0 then
		FlyTextTagLumberBounty(caster,"+"..ttk,ownplayer)
		AdjustPlayerStateBJ(ttk, ownplayer, PLAYER_STATE_RESOURCE_LUMBER )
	end
end